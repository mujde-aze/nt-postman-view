name: Deploy to firebase hosting on merge

on:
  push:
    branches: [ master ]
    tags:
      - 'v*.*.*'

env:
  PACKAGE_NAME: nt-postman-view
  BUILD_DIRECTORY: build
  REACT_APP_API_KEY: ${{ secrets.REACT_APP_API_KEY }}
  REACT_APP_AUTH_DOMAIN: ${{ secrets.REACT_APP_AUTH_DOMAIN }}
  REACT_APP_PROJECT_ID: ${{ secrets.REACT_APP_PROJECT_ID }}
  REACT_APP_STORAGE_BUCKET: ${{ secrets.REACT_APP_STORAGE_BUCKET }}
  REACT_APP_MESSAGING_SENDER_ID: ${{ secrets.REACT_APP_MESSAGING_SENDER_ID }}
  REACT_APP_APP_ID: ${{ secrets.REACT_APP_APP_ID }}
  REACT_APP_MEASUREMENT_ID: ${{ secrets.REACT_APP_MEASUREMENT_ID }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure env file
        run: |
          touch .env
          .github/scripts/env.sh

      - name: Build and test
        run: npm ci && npm run test && npm run build

      - name: Compress build directory
        run: |
          mkdir ${{ env.PACKAGE_NAME }}
          cp -R ${{ env.BUILD_DIRECTORY }} ${{ env.PACKAGE_NAME }}

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PACKAGE_NAME }}
          path: ${{ env.PACKAGE_NAME }}
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: ${{ env.PACKAGE_NAME }}
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_NT_POSTMAN }}'
          channelId: live
          projectId: nt-postman
